What is the expected running time of the following C# code? Explain why. Assume the array's size is n.

long Compute(int[] arr)
{
    long count = 0;
    for (int i=0; i<arr.Length; i++)
    {
        int start = 0, end = arr.Length-1;
        while (start < end)
            if (arr[start] < arr[end])
                { start++; count++; }
            else 
                end--;
    }
    return count;
}

Answer:

The first for-cycle will be executed n times.

The second while cycle will start at the oposite ends for start and end - 0 and n
and will execute untill these two ends meet.
So each time start or end will move closer to end/start respecfully only by 1 (++).
Lets say that each time only the start move - so the start will move n times before it reaches n.
The oposite way end will move n times before it reaches start.
If they both move they will each move n/2 making total n times.

So in conclusion the while cycle will also execute n times.

This means that the algorithm still runs in quadratic time O(n*n)
The number of elementary steps is ~ n^2.